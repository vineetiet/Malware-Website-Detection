import Trainer as tra
import csv
import FeatureExtraction as urlfeature


# Method to write the extracted features in CSV file
def FeatureWriteToFIle(WebsiteFeature,destination):
    isHeader=True

    with open(destination, 'w', newline='') as feature:
        for fea in WebsiteFeature:
            output = csv.DictWriter(feature, fea[1].keys())
            if isHeader:
                output.writeheader()
                isHeader=False
            output.writerow(fea[1])


# called from Main
def processURL(fileDestination,outputDestination):
    features=[]
    with open(fileDestination) as textFile:
        for li in textFile:
            webUrl=li.split(',')[0].strip()
            maliciousBoolean=li.split(',')[1].strip()
            if webUrl!='':
                print ('Processing URL :'+webUrl)
                feature=urlfeature.featureExtraction(webUrl)
                feature['malicious']=maliciousBoolean
                features.append([webUrl,feature]);
    FeatureWriteToFIle(features,outputDestination)


def processTestList(fileDestination,outputDestination):
    features=[]
    with open(fileDestination) as file:
        for li in file:
            webUrl=li.strip()
            if webUrl!='':
                print ('Process URL: '+webUrl)
                feature=urlfeature.feature_extract(webUrl)
                features.append([webUrl,feature]);
        FeatureWriteToFIle(features,outputDestination)


def processTestUrl(Weburl,outputDestination):
    features=[]
    u=Weburl.strip()
    if u!='':
        print ('Process URL: '+u)
        feature=urlfeature.feature_extract(u)
        features.append([u,feature]);
        FeatureWriteToFIle(features,outputDestination)


# Starting point to train the model, calculate the model's accuracy, precision, recall and cross validated accuracy.
def Main():
       processURL('WebURL.txt','WebURL_Feature.csv')

       tra.trainClassifier('WebURL_Feature.csv','WebURL_Feature.csv')
